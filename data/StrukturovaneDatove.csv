Otazka;Spravna_odpoved;Odpoved_2;Odpoved_3;Odpoved_4
"Co jsou hodnotové typy v C#?";"Typy, které uchovávají přímo svou hodnotu";"Typy, které uchovávají odkaz na objekt";"Typy pro práci s textem";"Typy pro asynchronní operace"
"Kde jsou ukládány hodnotové typy?";"Na zásobníku (stack)";"Na haldě (heap)";"V paměti ROM";"Na disku"
"Jaký je příklad hodnotového typu v C#?";"int";"string";"class";"List<T>"
"Co jsou referenční typy v C#?";"Typy ukládající odkaz na objekt";"Typy ukládající hodnotu přímo";"Typy pro práci s čísly";"Typy pro správu paměti"
"Kde jsou ukládány referenční typy?";"Na haldě (heap)";"Na zásobníku (stack)";"V dočasné paměti";"V grafické paměti"
"Jaký je příklad referenčního typu?";"string";"int";"bool";"struct"
"Co je struktura (struct) v C#?";"Hodnotový typ, který může obsahovat více hodnot";"Referenční typ pro práci s textem";"Asynchronní úloha";"Statický objekt"
"Jaká je hlavní výhoda použití struktury?";"Rychlejší přístup k hodnotám";"Podpora dědičnosti";"Automatická správa paměti";"Jednoduchá implementace paralelismu"
"Co je List<T> v C#?";"Dynamická kolekce měnící velikost";"Statické pole";"Omezená fronta";"Stohovací struktura"
"Jaká je hlavní vlastnost Dictionary<TKey, TValue>?";"Ukládání dvojic klíč-hodnota";"Přímý přístup přes index";"FIFO struktura";"Ukládání pouze číselných hodnot"
"Co je Queue<T> v C#?";"Fronta typu FIFO";"Zásobník typu LIFO";"Statické pole";"Asynchronní kolekce"
"Jak funguje Stack<T>?";"První dovnitř, poslední ven (LIFO)";"První dovnitř, první ven (FIFO)";"Sekvenční zpracování";"Paralelní zpracování"
"Co je HashSet<T> v C#?";"Kolekce unikátních prvků";"Dynamické pole s duplikáty";"Fronta pro zpracování úloh";"Zásobník pro ukládání hodnot"
"K čemu slouží Garbage Collector v C#?";"Automaticky uvolňuje paměť nepoužívaných objektů";"Zajišťuje přístup k databázi";"Spravuje připojení k internetu";"Optimalizuje grafiku"
"Kde probíhá statická správa paměti?";"Na zásobníku (stack)";"Na haldě (heap)";"V operační paměti";"Na pevném disku"
"Kde probíhá dynamická správa paměti?";"Na haldě (heap)";"Na zásobníku (stack)";"V grafické paměti";"V síťové paměti"
"Co je hlavní nevýhodou dynamické správy paměti?";"Vyžaduje garbage collector";"Vyžaduje ruční uvolňování";"Způsobuje pád aplikace";"Nemá přístup k datovým typům"
"Co je to alokace paměti?";"Přidělení prostoru pro data v paměti";"Odstranění dat z paměti";"Překlad kódu do strojového jazyka";"Asynchronní volání metody"
"Jaké kolekce jsou statické?";"Pole";"List<T>";"Dictionary<TKey, TValue>";"Queue<T>"
"Jaký je rozdíl mezi statickou a dynamickou kolekcí?";"Statická má pevnou velikost, dynamická se mění za běhu";"Dynamická kolekce je rychlejší";"Statická je vždy prázdná";"Dynamická kolekce ukládá pouze texty"
"Jaký je hlavní rozdíl mezi hodnotovým a referenčním typem?";"Hodnotový typ uchovává přímo hodnotu, referenční typ odkazuje na objekt";"Referenční typ je vždy rychlejší";"Hodnotový typ je vždy uložen na haldě";"Referenční typ nelze použít v cyklu"
"Co se stane při změně objektu referenčního typu?";"Změna se projeví ve všech odkazech";"Změna je lokální pro danou proměnnou";"Vytvoří se nová instance objektu";"Všechny reference se zneplatní"